{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-news/add-news.component.css","webpack:///./src/app/add-news/add-news.component.html","webpack:///./src/app/add-news/add-news.component.ts","webpack:///./src/app/add-news/add-news.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/dashboard/dashboard.service.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/http/http.service.ts","webpack:///./src/app/login-modal/login-modal.component.css","webpack:///./src/app/login-modal/login-modal.component.html","webpack:///./src/app/login-modal/login-modal.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.service.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/register/register.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"modal fade\\\" id=\\\"exampleModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Add</h5>\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <form>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n              <div class=\\\"col-sm-3\\\" style=\\\"text-align: center\\\">\\r\\n                <label for=\\\"title\\\" class=\\\"col-form-label\\\">Add Url</label>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-9\\\">\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"newUrl\\\" name=\\\"title\\\" required>\\r\\n              </div>\\r\\n            </div>\\r\\n  \\r\\n          </form>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSubmit()\\\">Add</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AddNewsService } from './add-news.service';\r\n\r\n@Component({\r\n  selector: 'add-news',\r\n  templateUrl: './add-news.component.html',\r\n  styleUrls: ['./add-news.component.css']\r\n})\r\nexport class AddNewsComponent implements OnInit {\r\n\r\n  public newUrl = '';\r\n\r\n  constructor(private addNewsService: AddNewsService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.newUrl) {\r\n      let urlMessage = {\r\n        url: this.newUrl\r\n      };\r\n      this.addNewsService.addNewsUrl(urlMessage).subscribe(res => {\r\n        if (res['success']) {\r\n          console.log(res['data']);\r\n          this.addNewsService.notifyNews(res['data']);\r\n        } else {\r\n          console.log(res['message']);\r\n        }\r\n\r\n      }, err => {\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpService } from '../http/http.service';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AddNewsService {\r\n\r\n  public news = new Subject();\r\n  public newsObservable = this.news.asObservable();\r\n\r\n  constructor(private http: HttpService) { }\r\n\r\n  public addNewsUrl(newsUrl){\r\n    return this.http.httpPost('scrape', newsUrl);\r\n  }\r\n\r\n  public notifyNews(newsObject){\r\n    this.news.next(newsObject);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<router-outlet></router-outlet>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport {AlertModule} from 'ngx-bootstrap/alert';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginService } from './login/login.service';\r\nimport { HttpService } from './http/http.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { AddNewsComponent } from './add-news/add-news.component';\r\nimport { AddNewsService } from './add-news/add-news.service';\r\nimport { DashboardService } from './dashboard/dashboard.service';\r\nimport { LoginModalComponent } from './login-modal/login-modal.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { RegisterService } from './register/register.service';\r\n\r\nconst router: Routes = [\r\n    { path: '', redirectTo: '/login', pathMatch: 'full' },\r\n    { path: 'login', component: LoginComponent },\r\n    { path: 'dashboard', component: DashboardComponent },\r\n    { path: 'register', component: RegisterComponent },\r\n]\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        LoginComponent,\r\n        DashboardComponent,\r\n        HeaderComponent,\r\n        AddNewsComponent,\r\n        LoginModalComponent,\r\n        RegisterComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        RouterModule.forRoot(router),\r\n        FormsModule,\r\n        HttpClientModule,\r\n        AlertModule.forRoot()\r\n    ],\r\n    providers: [LoginService, HttpService, AddNewsService,\r\n        DashboardService, RegisterService],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".fill { \\r\\n    min-height: 100%;\\r\\n    height: 100%;\\r\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\" style=\\\"height: 100%;\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <header></header>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\" style=\\\"margin-top: 20px\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n          <div class=\\\"d-flex justify-content-center\\\">\\r\\n            <h3 class=\\\"w-75\\\" style=\\\"text-align: center\\\">News Listing</h3>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n          <div class=\\\"d-flex justify-content-center\\\">\\r\\n            <ul class=\\\"list-group w-75\\\">\\r\\n              <a href=\\\"{{news.URL}}\\\" target=\\\"_blank\\\" class=\\\"list-group-item list-group-item-action d-flex justify-content-between align-items-center\\\"\\r\\n                *ngFor=\\\"let news of newsList\\\">\\r\\n                {{news.title}}\\r\\n                <span class=\\\"badge badge-primary badge-pill\\\">{{news.clicks}}</span>\\r\\n              </a>\\r\\n            </ul>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { DashboardService } from './dashboard.service';\r\nimport { AddNewsService } from '../add-news/add-news.service';\r\n\r\n@Component({\r\n  selector: 'dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  public newsList: any;\r\n\r\n  constructor(private dashboardService: DashboardService, private newsService: AddNewsService) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchNewsList(); \r\n\r\n    this.newsService.newsObservable.subscribe(res => {\r\n      // console.log(\"News Received : \"+ res);\r\n      if (this.newsList && this.newsList.length >= 0) {\r\n        this.newsList.push(res);\r\n      }\r\n    }, err => {\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  fetchNewsList() {\r\n    this.dashboardService.fetchNewsList().subscribe(res => {\r\n      if (res['success']) {\r\n        // console.log(res['data']);\r\n        this.newsList = res['data'];\r\n      } else {\r\n\r\n      }\r\n    }, err => {\r\n      console.log(err);\r\n    })\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpService } from '../http/http.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DashboardService {\r\n\r\n  constructor(private httpService : HttpService) { }\r\n\r\n  fetchNewsList(){\r\n    return this.httpService.httpGet('/fetchAllNewsArticles');\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<!-- FOR DASHBOARD PAGE -->\\r\\n<nav class=\\\"navbar navbar-expand-sm bg-light\\\" >\\r\\n\\r\\n  <!-- Links -->\\r\\n  <ul class=\\\"nav nav-pills\\\">\\r\\n    <!-- <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\" (click)=\\\"func()\\\">Link 1</a>\\r\\n      </li> -->\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link\\\" href=\\\"#\\\" (click)=\\\"func()\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModal\\\">Add News</a>\\r\\n    </li>\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link\\\" href=\\\"#\\\" (click)=\\\"logout()\\\">Logout</a>\\r\\n    </li>\\r\\n  </ul>\\r\\n\\r\\n  <ul class=\\\"nav nav-pills ml-auto\\\">\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link\\\">{{userId}}</a>\\r\\n    </li>\\r\\n\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"navbar-brand\\\">\\r\\n        <i class=\\\"far fa-user\\\"></i>\\r\\n      </a>\\r\\n    </li>\\r\\n  </ul>\\r\\n\\r\\n</nav>\\r\\n\\r\\n<add-news></add-news>\"","import { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from '../login/login.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  public userId = 'User Name';\r\n  public isLoginPage = false;\r\n\r\n  constructor(private loginService: LoginService, private router : Router) { }\r\n\r\n  ngOnInit() {\r\n    this.userId = this.loginService.userId;\r\n    this.isLoginPage = this.loginService.isLoginPage;\r\n  }\r\n\r\n  logout() {\r\n    this.loginService.logout().subscribe(res => {\r\n      console.log(res);\r\n      this.router.navigate(['login']);\r\n    }, err => {\r\n      console.log(err);\r\n    })\r\n\r\n    return false;\r\n  }\r\n\r\n  func() {\r\n    return false;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private http: HttpClient) { }\n\n  httpGet(url) {\n    return this.http.get(url, httpOptions);\n  }\n\n  httpPost(url, postBody) {\n    return this.http.post(url, postBody, httpOptions);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal fade\\\" id=\\\"login-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"loginModalLabel\\\" aria-hidden=\\\"false\\\" *ngIf = \\\"showModalWindow\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\" id=\\\"loginModalLabel\\\">Login</h5>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form #f=\\\"ngForm\\\">\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"col-sm-3\\\" style=\\\"text-align: center\\\">\\r\\n              <label for=\\\"title\\\" class=\\\"col-form-label\\\">UserId</label>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-9\\\">\\r\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"loginId\\\" name=\\\"title\\\" required>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"col-sm-3\\\" style=\\\"text-align: center\\\">\\r\\n              <label for=\\\"title\\\" class=\\\"col-form-label\\\">Password</label>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-9\\\">\\r\\n              <input class=\\\"form-control\\\" type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"title\\\" required>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"submit(f)\\\">Login</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { LoginService } from '../login/login.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'login-modal',\r\n  templateUrl: './login-modal.component.html',\r\n  styleUrls: ['./login-modal.component.css']\r\n})\r\nexport class LoginModalComponent implements OnInit {\r\n\r\n  public loginId;\r\n  public password;\r\n  public showModalWindow = false;\r\n\r\n  constructor(private loginService: LoginService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  closeModal(){\r\n\r\n  }\r\n\r\n  showModal(){\r\n    this.showModalWindow = true;\r\n  }\r\n\r\n  submit(f: NgForm) {\r\n    if (f.valid) {\r\n      let loginInfo = {\r\n        userId: this.loginId,\r\n        password: this.password\r\n      }\r\n\r\n      this.loginService.login(loginInfo).subscribe(res => {\r\n        if (res['success']) {\r\n          // console.log(res['data']);\r\n          this.loginService.userId = res['data']['userId'];\r\n          this.router.navigate(['dashboard']);\r\n        } else {\r\n\r\n        }\r\n      }, err => {\r\n        console.log(err);\r\n      })\r\n    }else{\r\n\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \".form-signin{\\r\\n    width: 100%;\\r\\n    max-width: 330px;\\r\\n    padding: 15px;\\r\\n    margin: auto;\\r\\n}\"","module.exports = \"<!-- FOR LOGIN PAGE -->\\r\\n<nav class=\\\"navbar navbar-expand-sm bg-light\\\">\\r\\n\\r\\n  <ul class=\\\"nav nav-pills mr-auto\\\">\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link\\\" [routerLink]=\\\"['/register']\\\" >Register</a>\\r\\n    </li>\\r\\n  </ul>\\r\\n\\r\\n  <form class=\\\"form-inline ml-auto\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"submit(f)\\\">\\r\\n    <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" name=\\\"user\\\" [(ngModel)]=\\\"loginId\\\" placeholder=\\\"UserId\\\">\\r\\n    <input class=\\\"form-control mr-sm-2\\\" type=\\\"password\\\" name=\\\"pass\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"Password\\\">\\r\\n    <button class=\\\"btn btn-success\\\" type=\\\"submit\\\">Login</button>\\r\\n  </form>\\r\\n\\r\\n</nav>\\r\\n\\r\\n<div class=\\\"container-fluid\\\" style=\\\"height: 100%;\\\">\\r\\n\\r\\n  <div class=\\\"row\\\" style=\\\"margin-top: 20px\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n          <div class=\\\"d-flex justify-content-center\\\">\\r\\n            <h3 class=\\\"w-75\\\" style=\\\"text-align: center\\\">News Listing</h3>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n          <div class=\\\"d-flex justify-content-center\\\">\\r\\n            <ul class=\\\"list-group w-75\\\">\\r\\n              <a href=\\\"{{news.URL}}\\\" target=\\\"_blank\\\" class=\\\"list-group-item list-group-item-action d-flex justify-content-between align-items-center\\\"\\r\\n                *ngFor=\\\"let news of newsList\\\">\\r\\n                {{news.title}}\\r\\n                <span class=\\\"badge badge-primary badge-pill\\\">{{news.clicks}}</span>\\r\\n              </a>\\r\\n            </ul>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { LoginService } from './login.service';\r\nimport { Router } from '@angular/router';\r\nimport { DashboardService } from '../dashboard/dashboard.service';\r\n\r\n@Component({\r\n  selector: 'login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public loginId;\r\n  public password;\r\n  public newsList: any;\r\n\r\n  constructor(private loginService: LoginService, private router: Router, private dashboardService: DashboardService) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchNewsList(); \r\n  }\r\n\r\n  func(){\r\n    return false;\r\n  }\r\n\r\n  fetchNewsList() {\r\n    this.dashboardService.fetchNewsList().subscribe(res => {\r\n      if (res['success']) {\r\n        // console.log(res['data']);\r\n        this.newsList = res['data'];\r\n      } else {\r\n\r\n      }\r\n    }, err => {\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  submit(f: NgForm) {\r\n    if (f.valid) {\r\n      let loginInfo = {\r\n        userId: this.loginId,\r\n        password: this.password\r\n      }\r\n\r\n      this.loginService.login(loginInfo).subscribe(res => {\r\n        if (res['success']) {\r\n          // console.log(res['data']);\r\n          this.loginService.userId = res['data']['userId'];\r\n          this.router.navigate(['dashboard']);\r\n        } else {\r\n\r\n        }\r\n      }, err => {\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpService} from '../http/http.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n  public userId = '';\r\n  public isLoginPage = false;\r\n\r\n  constructor(private httpService : HttpService) { }\r\n\r\n  login(loginInfo){\r\n    return this.httpService.httpPost('/login', loginInfo);\r\n  }\r\n\r\n  logout(){\r\n    return this.httpService.httpGet('/logout');\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<!-- FOR REGISTER PAGE -->\\n<nav class=\\\"navbar navbar-expand-sm bg-light\\\">\\n\\n  <ul class=\\\"nav nav-pills mr-auto\\\">\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" [routerLink]=\\\"['/login']\\\">Back to Login Page</a>\\n    </li>\\n  </ul>\\n\\n</nav>\\n\\n<div class=\\\"container-fluid\\\">\\n\\n  <div class=\\\"row\\\" style=\\\"margin-top: 20px\\\">\\n    <div class=\\\"col-sm-12\\\">\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <div class=\\\"d-flex justify-content-center\\\">\\n            <alert [type]=\\\"alert.type\\\" class=\\\"w-25\\\" style=\\\"text-align: center\\\" *ngIf=\\\"alertOpen\\\" [dismissOnTimeout]=\\\"alert.timeout\\\"\\n              (onClosed)=\\\"closeAlert()\\\">\\n              {{alert.message}}\\n            </alert>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\" *ngIf=\\\"!hideForm\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <div class=\\\"d-flex justify-content-center\\\">\\n            <h3 class=\\\"w-75\\\" style=\\\"text-align: center\\\">REGISTER</h3>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\" *ngIf=\\\"hideForm\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <div class=\\\"d-flex justify-content-center\\\">\\n            <h5 class=\\\"w-75\\\" style=\\\"text-align: center\\\">You have registered successfully!! Please login with your credentials.</h5>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"d-flex justify-content-center \\\" style=\\\"margin-top: 20px\\\" *ngIf=\\\"!hideForm\\\">\\n\\n        <form style=\\\"width: 30%\\\" #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"register(registerForm)\\\">\\n          <div class=\\\"form-group row\\\">\\n            <label for=\\\"Name\\\" class=\\\"col-sm-3 col-form-label\\\">Name</label>\\n            <div class=\\\"col-sm-9\\\">\\n              <input #name_text=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"input0\\\" [(ngModel)]=\\\"name\\\" class=\\\"form-control\\\" id=\\\"name\\\"\\n                placeholder=\\\"Enter your name\\\" required>\\n              <div [hidden]=\\\"name_text.valid || name_text.pristine\\\" class=\\\"alert alert-danger\\\">\\n                Name is required\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group row\\\">\\n            <label for=\\\"Email\\\" class=\\\"col-sm-3 col-form-label\\\">Email</label>\\n            <div class=\\\"col-sm-9\\\">\\n              <input #email_text=\\\"ngModel\\\" type=\\\"email\\\" name=\\\"input1\\\" [(ngModel)]=\\\"email\\\" class=\\\"form-control\\\" id=\\\"Email\\\"\\n                placeholder=\\\"Enter your email eg: abcd@qwer.com\\\" required>\\n              <div [hidden]=\\\"email_text.valid || email_text.pristine\\\" class=\\\"alert alert-danger\\\">\\n                Email is required\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group row\\\">\\n            <label for=\\\"UserId\\\" class=\\\"col-sm-3 col-form-label\\\">User ID</label>\\n            <div class=\\\"col-sm-9\\\">\\n              <input #userId_text=\\\"ngModel\\\" type=\\\"text\\\" name=\\\"input2\\\" [(ngModel)]=\\\"userId\\\" class=\\\"form-control\\\" id=\\\"UserId\\\"\\n                placeholder=\\\"Enter a User ID\\\" required>\\n              <div [hidden]=\\\"userId_text.valid || userId_text.pristine\\\" class=\\\"alert alert-danger\\\">\\n                User ID is required\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group row\\\">\\n            <label for=\\\"Password\\\" class=\\\"col-sm-3 col-form-label\\\">Password</label>\\n            <div class=\\\"col-sm-9\\\">\\n              <input #password_text=\\\"ngModel\\\" type=\\\"password\\\" name=\\\"input3\\\" [(ngModel)]=\\\"password\\\" class=\\\"form-control\\\"\\n                id=\\\"Password\\\" placeholder=\\\"Enter a strong password\\\" required>\\n              <div [hidden]=\\\"password_text.valid || password_text.pristine\\\" class=\\\"alert alert-danger\\\">\\n                Password is required\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group row\\\">\\n            <div class=\\\"col-sm-12\\\" style=\\\"text-align: center\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-success form-control\\\" style=\\\"width: 33%\\\" id=\\\"Submit\\\" [disabled]=\\\"!registerForm.form.valid\\\">Register</button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { RegisterService } from './register.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  public name = '';\n  public email = '';\n  public userId = '';\n  public password = '';\n  public alert: any;\n  public alertOpen = false;\n  public hideForm = false;\n\n  constructor(private registerService: RegisterService, private router : Router) { }\n\n  ngOnInit() {\n  }\n\n  register(form) {\n\n    if (this.userId.trim() && this.password.trim() && this.name.trim() && this.email.trim()) {\n      let userDetails = {\n        name: this.name,\n        email: this.email,\n        password: this.password,\n        userId: this.userId\n      }\n\n      this.registerService.register(userDetails).subscribe(res => {\n        if (res['success']) {\n          console.log(res['data']);\n          this.openAlert('Done :)', 'success');\n          // form.reset();\n          this.hideForm = true;\n        } else {\n          this.openAlert(res['message'], 'danger');\n        }\n      }, err => {\n        console.log(err);\n      })\n\n    } else {\n      this.openAlert('Invalid Details', 'danger');\n      form.reset();\n    }\n\n    // form.reset();\n  }\n\n  closeAlert() {\n    this.alertOpen = false;\n  }\n\n  openAlert(message, alertType) {\n    this.alert = {\n      timeout: 3000,\n      message: message,\n      type: alertType\n    };\n\n    this.alertOpen = true;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpService } from '../http/http.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n\n  constructor(private httpService : HttpService) { }\n\n  public register(userDetails){\n    return this.httpService.httpPost('/register', userDetails);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}
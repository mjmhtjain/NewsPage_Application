{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-news/add-news.component.css","webpack:///./src/app/add-news/add-news.component.html","webpack:///./src/app/add-news/add-news.component.ts","webpack:///./src/app/add-news/add-news.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/dashboard/dashboard.service.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/http/http.service.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"modal fade\\\" id=\\\"exampleModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Add</h5>\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <form>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n              <div class=\\\"col-sm-3\\\" style=\\\"text-align: center\\\">\\r\\n                <label for=\\\"title\\\" class=\\\"col-form-label\\\">Add Url</label>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-9\\\">\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"newUrl\\\" name=\\\"title\\\" required>\\r\\n              </div>\\r\\n            </div>\\r\\n  \\r\\n          </form>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSubmit()\\\">Add</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AddNewsService } from './add-news.service';\r\n\r\n@Component({\r\n  selector: 'add-news',\r\n  templateUrl: './add-news.component.html',\r\n  styleUrls: ['./add-news.component.css']\r\n})\r\nexport class AddNewsComponent implements OnInit {\r\n\r\n  public newUrl = '';\r\n\r\n  constructor(private addNewsService: AddNewsService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.newUrl) {\r\n      let urlMessage = {\r\n        url: this.newUrl\r\n      };\r\n      this.addNewsService.addNewsUrl(urlMessage).subscribe(res => {\r\n        if (res['success']) {\r\n          console.log(res['data']);\r\n          this.addNewsService.notifyNews(res['data']);\r\n        } else {\r\n          console.log(res['message']);\r\n        }\r\n\r\n      }, err => {\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpService } from '../http/http.service';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddNewsService {\n\n  public news = new Subject();\n  public newsObservable = this.news.asObservable();\n\n  constructor(private http: HttpService) { }\n\n  public addNewsUrl(newsUrl){\n    return this.http.httpPost('scrape', newsUrl);\n  }\n\n  public notifyNews(newsObject){\n    this.news.next(newsObject);\n  }\n}\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginService } from './login/login.service';\r\nimport { HttpService } from './http/http.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { AddNewsComponent } from './add-news/add-news.component';\r\nimport { AddNewsService } from './add-news/add-news.service';\r\nimport { DashboardService } from './dashboard/dashboard.service';\r\n\r\nconst router: Routes = [\r\n    { path: '', redirectTo: '/login', pathMatch: 'full' },\r\n    { path: 'login', component: LoginComponent },\r\n    { path: 'dashboard', component: DashboardComponent }\r\n]\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        LoginComponent,\r\n        DashboardComponent,\r\n        HeaderComponent,\r\n        AddNewsComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        RouterModule.forRoot(router),\r\n        FormsModule,\r\n        HttpClientModule\r\n    ],\r\n    providers: [LoginService, HttpService, AddNewsService,\r\n        DashboardService],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".fill { \\r\\n    min-height: 100%;\\r\\n    height: 100%;\\r\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\" style=\\\"height: 100%;\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <header></header>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\" style=\\\"margin-top: 20px\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n          <div class=\\\"d-flex justify-content-center\\\">\\r\\n            <h3 class=\\\"w-75\\\" style=\\\"text-align: center\\\">News Listing</h3>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12\\\">\\r\\n          <div class=\\\"d-flex justify-content-center\\\">\\r\\n            <ul class=\\\"list-group w-75\\\">\\r\\n              <li class=\\\"list-group-item d-flex justify-content-between align-items-center\\\" *ngFor = \\\"let news of newsList\\\">\\r\\n                {{news.title}}\\r\\n                <span class=\\\"badge badge-primary badge-pill\\\">{{news.clicks}}</span>\\r\\n              </li>\\r\\n              <!-- <li class=\\\"list-group-item d-flex justify-content-between align-items-center\\\">\\r\\n                Ads\\r\\n                <span class=\\\"badge badge-primary badge-pill\\\">50</span>\\r\\n              </li>\\r\\n              <li class=\\\"list-group-item d-flex justify-content-between align-items-center\\\">\\r\\n                Junk\\r\\n                <span class=\\\"badge badge-primary badge-pill\\\">99</span>\\r\\n              </li> -->\\r\\n            </ul>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { DashboardService } from './dashboard.service';\r\nimport { AddNewsService } from '../add-news/add-news.service';\r\n\r\n@Component({\r\n  selector: 'dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  public newsList :any;\r\n\r\n  constructor(private dashboardService: DashboardService, private newsService : AddNewsService) { }\r\n\r\n  ngOnInit() {\r\n    this.fetchNewsList();\r\n\r\n    this.newsService.newsObservable.subscribe(res=>{\r\n      // console.log(\"News Received : \"+ res);\r\n      if(this.newsList && this.newsList.length >= 0){\r\n        this.newsList.push(res);\r\n      }\r\n    }, err=>{\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  fetchNewsList() {\r\n    this.dashboardService.fetchNewsList().subscribe(res => {\r\n      if (res['success']) {\r\n        console.log(res['data']);\r\n        this.newsList = res['data'];\r\n      } else {\r\n\r\n      }\r\n    }, err => {\r\n      console.log(err);\r\n    })\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpService } from '../http/http.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n\n  constructor(private httpService : HttpService) { }\n\n  fetchNewsList(){\n    return this.httpService.httpGet('/fetchAllNewsArticles');\n  }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-sm bg-light\\\">\\r\\n\\r\\n    <!-- Links -->\\r\\n    <ul class=\\\"nav nav-pills\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" >Link 1</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModal\\\" >Add News</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" (click)=\\\"logout()\\\">Logout</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n  \\r\\n    <ul class=\\\"nav nav-pills ml-auto\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" >{{userId}}</a>\\r\\n      </li>\\r\\n  \\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"navbar-brand\\\" >\\r\\n          <i class=\\\"far fa-user\\\"></i>\\r\\n        </a>\\r\\n      </li>\\r\\n    </ul>\\r\\n  \\r\\n  </nav>\\r\\n\\r\\n  <add-news></add-news>\"","import { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from '../login/login.service';\r\n\r\n@Component({\r\n  selector: 'header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  public userId = 'User Name';\r\n\r\n  constructor(private loginService : LoginService) { }\r\n\r\n  ngOnInit() {\r\n    this.userId = this.loginService.userId;\r\n  }\r\n\r\n  logout(){\r\n    this.loginService.logout();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json'\r\n  })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  httpGet(url) {\r\n    return this.http.get(url, httpOptions);\r\n  }\r\n\r\n  httpPost(url, postBody) {\r\n    return this.http.post(url, postBody, httpOptions);\r\n  }\r\n\r\n}\r\n","module.exports = \".form-signin{\\r\\n    width: 100%;\\r\\n    max-width: 330px;\\r\\n    padding: 15px;\\r\\n    margin: auto;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\" style=\\\"margin-top: 10%\\\">\\r\\n  <div class=\\\"col-sm-12\\\" style=\\\"text-align: center\\\">\\r\\n    <form class=\\\"form-signin\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"submit(f)\\\">\\r\\n      <h1 class=\\\"h3 mb-3 font-weight-normal\\\">Please sign in</h1>\\r\\n      <label for=\\\"loginid\\\" class=\\\"sr-only\\\">Login Id</label>\\r\\n      <input type=\\\"text\\\" id=\\\"loginid\\\" name=\\\"loginid\\\" class=\\\"form-control\\\" placeholder=\\\"Login Id\\\" required=\\\"\\\" autofocus=\\\"\\\" [(ngModel)]=\\\"loginId\\\">\\r\\n\\r\\n      <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\r\\n      <input type=\\\"password\\\" id=\\\"inputPassword\\\" name=\\\"inputPassword\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" required=\\\"\\\" [(ngModel)]=\\\"password\\\">\\r\\n      <div class=\\\"checkbox mb-3\\\">\\r\\n        <label>\\r\\n          <input type=\\\"checkbox\\\" value=\\\"remember-me\\\"> Remember me\\r\\n        </label>\\r\\n      </div>\\r\\n      <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\" >Sign in</button>\\r\\n      <p class=\\\"mt-5 mb-3 text-muted\\\">© 2017-2018</p>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { LoginService } from './login.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public loginId;\r\n  public password;\r\n\r\n  constructor(private loginService: LoginService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  submit(f: NgForm) {\r\n    if (f.valid) {\r\n      // console.log(this.loginId + \"   \" + this.password);\r\n      let loginInfo = {\r\n        userId: this.loginId,\r\n        password: this.password\r\n      }\r\n\r\n      this.loginService.login(loginInfo).subscribe(res => {\r\n        if (res['success']) {\r\n          // console.log(res['data']);\r\n          this.loginService.userId = res['data']['userId'];\r\n          this.router.navigate(['dashboard']);\r\n        } else {\r\n\r\n        }\r\n      }, err => {\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpService} from '../http/http.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n  public userId = '';\r\n\r\n  constructor(private httpService : HttpService) { }\r\n\r\n  login(loginInfo){\r\n    return this.httpService.httpPost('/login', loginInfo);\r\n  }\r\n\r\n  logout(){\r\n    this.httpService.httpGet('/logout');\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}
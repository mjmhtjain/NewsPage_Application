{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-news/add-news.component.css","webpack:///./src/app/add-news/add-news.component.html","webpack:///./src/app/add-news/add-news.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/http/http.service.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"modal fade\\\" id=\\\"exampleModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Add BucketList</h5>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <form>\\n            <div class=\\\"form-group row\\\">\\n              <div class=\\\"col-sm-3\\\" style=\\\"text-align: center\\\">\\n                <label for=\\\"title\\\" class=\\\"col-form-label\\\">Add Url</label>\\n              </div>\\n              <div class=\\\"col-sm-9\\\">\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"newUrl\\\" name=\\\"title\\\" required>\\n              </div>\\n            </div>\\n  \\n          </form>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onSubmit()\\\">Add</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'add-news',\n  templateUrl: './add-news.component.html',\n  styleUrls: ['./add-news.component.css']\n})\nexport class AddNewsComponent implements OnInit {\n\n  public newUrl = '';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<router-outlet></router-outlet>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginService } from './login/login.service';\nimport { HttpService } from './http/http.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HeaderComponent } from './header/header.component';\nimport { AddNewsComponent } from './add-news/add-news.component';\n\nconst router: Routes = [\n    { path: '', redirectTo: '/login', pathMatch: 'full' },\n    { path: 'login', component: LoginComponent },\n    { path: 'dashboard', component: DashboardComponent }\n]\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        LoginComponent,\n        DashboardComponent,\n        HeaderComponent,\n        AddNewsComponent\n    ],\n    imports: [\n        BrowserModule,\n        RouterModule.forRoot(router),\n        FormsModule,\n        HttpClientModule\n    ],\n    providers: [LoginService, HttpService],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".fill { \\r\\n    min-height: 100%;\\r\\n    height: 100%;\\r\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\" style=\\\"height: 100%;\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <header></header>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\" style=\\\"margin-top: 20px\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <div class=\\\"d-flex justify-content-center\\\">\\n            <h3 class=\\\"w-75\\\" style=\\\"text-align: center\\\">News Listing</h3>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <div class=\\\"d-flex justify-content-center\\\">\\n            <ul class=\\\"list-group w-75\\\">\\n              <li class=\\\"list-group-item d-flex justify-content-between align-items-center\\\">\\n                Inbox\\n                <span class=\\\"badge badge-primary badge-pill\\\">12</span>\\n              </li>\\n              <li class=\\\"list-group-item d-flex justify-content-between align-items-center\\\">\\n                Ads\\n                <span class=\\\"badge badge-primary badge-pill\\\">50</span>\\n              </li>\\n              <li class=\\\"list-group-item d-flex justify-content-between align-items-center\\\">\\n                Junk\\n                <span class=\\\"badge badge-primary badge-pill\\\">99</span>\\n              </li>\\n            </ul>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-sm bg-light\\\">\\n\\n    <!-- Links -->\\n    <ul class=\\\"nav nav-pills\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" >Link 1</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModal\\\" >Add News</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" (click)=\\\"logout()\\\">Logout</a>\\n      </li>\\n    </ul>\\n  \\n    <ul class=\\\"nav nav-pills ml-auto\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" >{{userId}}</a>\\n      </li>\\n  \\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"navbar-brand\\\" >\\n          <i class=\\\"far fa-user\\\"></i>\\n        </a>\\n      </li>\\n    </ul>\\n  \\n  </nav>\\n\\n  <add-news></add-news>\"","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../login/login.service';\n\n@Component({\n  selector: 'header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  public userId = 'User Name';\n\n  constructor(private loginService : LoginService) { }\n\n  ngOnInit() {\n    this.userId = this.loginService.userId;\n  }\n\n  logout(){\n    this.loginService.logout();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private http: HttpClient) { }\n\n  httpGet(url) {\n    return this.http.get(url, httpOptions);\n  }\n\n  httpPost(url, postBody) {\n    return this.http.post(url, postBody, httpOptions);\n  }\n\n}\n","module.exports = \".form-signin{\\r\\n    width: 100%;\\r\\n    max-width: 330px;\\r\\n    padding: 15px;\\r\\n    margin: auto;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\" style=\\\"margin-top: 10%\\\">\\n  <div class=\\\"col-sm-12\\\" style=\\\"text-align: center\\\">\\n    <form class=\\\"form-signin\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"submit(f)\\\">\\n      <h1 class=\\\"h3 mb-3 font-weight-normal\\\">Please sign in</h1>\\n      <label for=\\\"loginid\\\" class=\\\"sr-only\\\">Login Id</label>\\n      <input type=\\\"text\\\" id=\\\"loginid\\\" name=\\\"loginid\\\" class=\\\"form-control\\\" placeholder=\\\"Login Id\\\" required=\\\"\\\" autofocus=\\\"\\\" [(ngModel)]=\\\"loginId\\\">\\n\\n      <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\n      <input type=\\\"password\\\" id=\\\"inputPassword\\\" name=\\\"inputPassword\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" required=\\\"\\\" [(ngModel)]=\\\"password\\\">\\n      <div class=\\\"checkbox mb-3\\\">\\n        <label>\\n          <input type=\\\"checkbox\\\" value=\\\"remember-me\\\"> Remember me\\n        </label>\\n      </div>\\n      <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\" >Sign in</button>\\n      <p class=\\\"mt-5 mb-3 text-muted\\\">© 2017-2018</p>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { LoginService } from './login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public loginId;\n  public password;\n\n  constructor(private loginService: LoginService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  submit(f: NgForm) {\n    if (f.valid) {\n      // console.log(this.loginId + \"   \" + this.password);\n      let loginInfo = {\n        userId: this.loginId,\n        password: this.password\n      }\n\n      this.loginService.login(loginInfo).subscribe(res => {\n        if (res['success']) {\n          // console.log(res['data']);\n          this.loginService.userId = res['data']['userId'];\n          this.router.navigate(['dashboard']);\n        } else {\n\n        }\n      }, err => {\n        console.log(err);\n      })\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpService} from '../http/http.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  public userId = '';\n\n  constructor(private httpService : HttpService) { }\n\n  login(loginInfo){\n    return this.httpService.httpPost('/login', loginInfo);\n  }\n\n  logout(){\n    this.httpService.httpGet('/logout');\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}